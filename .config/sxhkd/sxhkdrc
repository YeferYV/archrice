#
# wm independent hotkeys
#

# terminal emulator
super + {_,shift + }Return
  {alacritty, bspc rule -a \* -o state=floating && alacritty}

# terminal emulator
mod1 + Return
	urxvt

# dmenu launcher
super + {_,shift + }d
	{dmenu_run, alacritty -e $(dmenu_path | dmenu)}

# dunst reopen notification
ctrl + Escape
	dunstctl history-pop

# dunst close notification
ctrl + space
	dunstctl close

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + ctrl + u
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {h,j,k,l}
	bspc node -f {west,south,north,east}

# Swap focused window with the one in the given direction
mod4 + shift + {h,j,k,l}
  $HOME/.config/bspwm/bspwm_smart_move {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + alt + {minus,equal}
	bspc desktop -f {prev,next}.local

# no/reset gaps size
super + bracket{left,right}
	{bspc config window_gap -1 & bspc config border_width 1 , bspc config window_gap 12 & bspc config border_width 2}

# Increase/descrease gap size
mod4 + shift + bracket{left,right}
	bspc config window_gap $(($(bspc config window_gap) {+,-} 2))

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# swap the last node/desktop
super + shift + {grave,Tab}
	bspc {node,desktop} -s last

# swap the last node/desktop
super + space
	bspc node -f {last}.local.!hidden.window && \
	bspc node -s last
	# bspc node -s {last}.local.!hidden.window

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# rotate focused tree CW
super + r
	bspc node @focused:/ -C backward

# rotate focused tree CCW
super + shift + r
	bspc node @focused:/ -C forward

# Rotate the current nodes parent
super + control + {Right, Left}
	bspc node @parent --rotate {90,270}

# rotate the current node focused
super + control + {Up, Down}
	bspc node @focused:/ -R {90,270}

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
#super + alt + {h,j,k,l}
#  bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
#super + alt + shift + {h,j,k,l}
#  bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# contract a window by moving one of its side inward
#super + shift + {Left,Down,Up,Right}
#	 bspc node -z {right -10 0,top 0 10,bottom 0 -10,left 10 0}

# balance desktop's nodes
super + v
  bspc node @/ -B

# move a floating window
super + alt + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# hover a window to corner
super + alt + shift + {h,j,k,l}
  hover {left,down,up,right}

# xdo a window to left/down/up/right
super + alt + {h,j,k,l}
  { x=0;   y=0;   w=681;  h=764; \
  , x=0;   y=382; w=1362; h=382; \
  , x=0;   y=0;   w=1362; h=382; \
  , x=681; y=0;   w=681;  h=764; \
  } \
  xdo move -x $x -y $y; xdo resize -w $w -h $h

# resize small/medium
super + alt + {_,shift + } n
  xdo resize {-w 681 -h 382,-w 800 -h 600}

# xdo fixedscreen 1366x768 no visible borders
super + ctrl + {_,shift + } n
  xdo move -x 0 -y 0; xdo move {-x -1 -y -1, -x -2 -y -2}; xdo resize -w 1366 -h 768

# xdo fixedscreen 1366x768
super + {_,shift + }n
  { x=250; y=18;  w=1112; h=746; \
  , x=0;   y=0;   w=1362; h=764; \
  } \
  xdo move -x $x -y $y; xdo resize -w $w -h $h

#
# status bar
#

# toggle polybar
# super + shift + space
#   ( pgrep polybar && killall polybar && bspc config top_padding 0 ) || \
#   ( $HOME/.config/polybar/launch.sh && sleep 0.5 && bspc config top_padding 18 );

# toggle polybar
super + shift + space
	{polybar-msg cmd toggle; bspc config top_padding 0 ,\
	 polybar-msg cmd toggle; bspc config top_padding 18 }

#
# receptacles
#

# Move new node to receptacle automatically
super + {_,shift +}y
  { $HOME/.config/bspwm/bspsubscribe, killall bspsubscribe }

# Close all receptacle
super + shift + o
  for win in `bspc query -N -n .leaf.\!window`; do bspc node $win -k ; done;

# Insert receptacle
super + shift + i; {h,j,k,l}
  bspc node --presel-dir {west,south,north,east} -i

# Move to receptacle
super + shift + u
	ID=$(bspc query -N -n) \
	bspc node $ID -n $(bspc query -N -n .leaf.\!window)

#
# sxhkd wiki
#

# resize west,south,north,east
super + alt + control + {h,j,k,l} ; {0-9}
	bspc node @{west,south,north,east} -r 0.{0-9}

# toggle focus_follows_pointer
super + mod1 + p
	bspc config focus_follows_pointer {true,false}

# Smart resize, will grow or shrink depending on location.
# Will always grow for floating nodes.
super + {Left,Down,Up,Right}
  n=40; \
  { d1=left;   d2=right;  dx=-$n; dy=0;   \
  , d1=bottom; d2=top;    dx=0;   dy=$n;  \
  , d1=top;    d2=bottom; dx=0;   dy=-$n; \
  , d1=right;  d2=left;   dx=$n;  dy=0;   \
  } \
  bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy

# Smart resize, will grow or shrink depending on location.
# Will always shrink for floating nodes.
super + shift + {Left,Down,Up,Right}
  n=40; \
  { d1=left;   d2=right;  dx=-$n; dy=0;   \
  , d1=bottom; d2=top;    dx=0;   dy=$n;  \
  , d1=top;    d2=bottom; dx=0;   dy=-$n; \
  , d1=right;  d2=left;   dx=$n;  dy=0;   \
  } \
  bspc node --resize $d2 $dx $dy || bspc node --resize $d1 $dx $dy


########################################
###      alphabetic_hotkeys          ###
#######################################

# signs
F{1,2,3,4,5,6,7,8,9,10}
	xdotool key {exclam,at,numbersign,dollar,percent,asciicircum,ampersand,asterisk,parenleft,parenright}

# super/alt click
{XF86Finance,XF86Game}
  xdotool click {1,2}

# super volume
super + XF86Audio{Raise,Lower}Volume
  pactl set-sink-volume @DEFAULT_SINK@ {+,-}5%

# volume
XF86Audio{Raise,Lower}Volume
  pactl set-sink-volume @DEFAULT_SINK@ {+,-}2%

# (un)mute
XF86AudioMute
  pactl set-sink-mute @DEFAULT_SINK@ toggle

# (un)mute mic
XF86AudioMicMute
  pactl set-source-mute @DEFAULT_SOURCE@ toggle

# backlight
XF86MonBrightness{Down,Up}
  sudo light -{U,A} .11

# super backlight
super + XF86MonBrightness{Down,Up}
  sudo light -{U,A} 2

# dimmer
shift + XF86MonBrightness{Down,Up}
  xcalib {-co 75 -a,-c}

# dmenu(u)mount
super + {F11,F12}
  {dmenumount,dmenuumount}

# mpv vol-up
super + KP_Up
  [[ "$(playerctl -p mpv volume)" < 1 ]]&& playerctl --player=mpv volume 0.1+

# mpv vol-down
super + KP_Down
  playerctl --player=mpv volume 0.1-

# mpv next-toggle-prev
super + KP_{Right,Begin,Left}
  playerctl --player=mpv {next,play-pause,previous}

# chromium play-pause
alt + space
  playerctl --player=chromium play-pause

# chromium rewind-forward
alt + {a,s}
  YTID="$(wmctrl -l | awk '/YouTube/ \{print $1\}' | awk 'NR==1')"; \
  CUID="$(xdo id)"; \
  xdo activate $YTID && sleep 0.2 && xdotool key --clearmodifiers {w,e} && xdo activate $CUID
  #wmctrl -l | awk '/YouTube/ \{print $1\}' | awk 'NR==1' | xargs -I_ xdo activate _ && sleep 1 && xdotool key --clearmodifiers w

# spotify vol-up
mod1 + KP_Up
  [[ "$(playerctl -p mpv volume)" < 1 ]]&& playerctl --player=spotify volume 0.1+

# spotify vol-down
mod1 + KP_Down
  playerctl --player=spotify volume 0.1-

# spotify next-toggle-prev
mod1 + KP_{Right,Begin,Left}
  playerctl --player=spotify {next,play-pause,previous}

# mpc next-toggle-prev
KP_{Right,Begin,Left,Down,Up}
  mpc {next,toggle,prev,volume -2,volume +2}

# mpc next-toggle-prev
mod1 + {XF86AudioRaiseVolume,XF86AudioMute,XF86AudioLowerVolume}
  mpc {next,toggle,prev}

# screenshot fullscreen
Print
  maimpick fullscreen
  # maim ~/bgs/bgi/"$(date '+%y%m%d-%H%M-%S').png" && sleep 0.5s && notify-send "screenshot done"

# screenshot dmenu
shift + Print
  maimpick

# screenshot close
ctrl + Print
  killall notify-send

# redshift
mod1 + ctrl + {1,2,3,4,5}
  redshift {-x, -O 2222, -O 3333, -O 4444, -O 5555}

# compositor start
super + minus
  picom --glx-no-rebind-pixmap \
        --use-damage \
        --xrender-sync-fence \
        --backend glx \
        --experimental-backends \
        --transparent-clipping \
        # --active-opacity=0.90 \
        # --inactive-opacity=0.90 \
        # --refresh-rate 30

# compositor close
super + equal
  killall picom

super + shift + {minus,equal}
  picom-trans -c {-- -2,+2}

# dmenu launcher alias
super + ctrl + d
  source $HOME/.config/shell/aliasrc && \
  cmd=$(alias | cut -d'=' -f1 | cut -d\  -f2 | dmenu) && \
  alias | grep $(echo $cmd | cut -d\  -f1 ) | cut -d'=' -f2 | xargs -I __ alacritty -e bash -c "__ $(echo $cmd | awk '\{print $2\}' )"
  # alias | grep $cmd | cut -d'=' -f2 | xargs -I _ alacritty -e bash -c "_"
  # alias | grep $cmd | cut -d'=' -f2 | xargs -I _ bash -c "_"

# TextToSpeech
super + {_,shift,ctrl} + Next
  {xclip -o | picospeaker, xsel -b | festival --tts, killall picospeaker festival}

# skippy
mod1 + BackSpace
   skippy-xd-runner --activate {--prev,--next}

# skippy
#mod1 + {~Tab,space}
#   skippy-xd-runner {--activate --next,--toggle}

# skippy
XF86Shop
  skippy-xd-runner --toggle

# browser media
super + shift + b
  urxvt -e ncmpcpp

# lf user
super + e
  export LF_CD=true && alacritty

# lf root
super + shift + e
  sudo -i LF_CD=true LS_COLORS="" alacritty
  #sudo -E alacritty -e lf /root

# browser
super + {_,shift +} w
  { google-chrome-stable --process-per-site, killall chrome}
  # google-chrome-stable && xdo move -x 200 -y 15; xdo resize -w 1151 -h 738

